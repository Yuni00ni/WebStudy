1. JavaScript : 웹페이지에서 기능을 제작할 때 사용하는 언어
  - HTML : 페이지의 뼈대 담당(이미지, 글자 등)
  - CSS : 페이지의 디자인 담당(글자색, 폰트 크기 등)
  - JS : 동적인 기능을 제작(알림, 입력창 등)


2. JS를 사용하기 위해서는 HTML 파인 안에 <body> -> </body> 바로 위에 작성
ㄴ> <script></script> << 이게 스크립트 태그
-> 이유 : 작업 중인 파일이 확장자가 html이기 때문에 언어가 다름
  -> 나 자바스크립트 언어를 써도 돼? 라고 물어보는 것


3. 출력문 3가지
  - document.write(); -> document만 기억(문서 - html)
  - console.log(); -> f12(개발자 도구) -> console 탭에서 확인 -> 개발자 사용
  - alert(); -> 사용자한테 메세지를 전달할 때 사용 -> 팝업창(확인버튼만 있음)


4. 입력문 2가지
  - prompt(); -> 사용자한테 직접 입력창을 제공
		ㄴ> 사용자가 숫자, 문자, 등등 어떤 것을 입력해도 넘어오는 데이터의 리턴값은 문자열(String) 값이다.
  - confirm(); -> 사용자에게 확인 or 취소 제공(t || f == boolean)


5. 변수와 상수
  - 변수 : 변해도 되는 값을 저장하는 공간
  - 상수 : 변하면 안되는 값을 저장하는 공간
  - 변수 키워드 2개 (var vs let)
    - var : JS 초창기에 나왔던 변수 키워드 -> 현재는 권장하지 않음
      -> 이유 : 변수의 호이스팅 현상 때문
        -> 변수의 이름이 중복이 가능 -> 코드의 일관성이 떨어짐
    - let : ECMA6 이후로 등장 -> 현재는 국제 표준, 권장사항
      -> 이유 : let은 변수 명이 중복되지 않음(재선언 불가) 재할당은 가능
  - 상수 키워드 1개(const)
    - const : 값도 중복이 안되며, 이름도 중복되지 않음(재선언,할당 불가능)


6. 자료형
  - 개념 : 데이터의 타입을 정하는 방법
  - 문자 : '', "" 사용하면 모두 문자열로 인식 -> String
  - 숫자 : 정수, 실수 모두 숫자로 인식 -> Number
  - Boolean : true, false 구분하는 데이터
  - undifiend : 값이 존재하지 않음 선언만 되어있는 것
    ㄴ> let number;
  - null : 의도적으로 비어있는 값을 의미(값을 null로 할당하여 비워둠)
    ㄴ> let num = null;


7. 형변환
  - 사용하는 이유 : 웹에서 사용자가 입력하는 값이 모두 String
  - 사용방법 : 문자를 숫자로 바꾸는 방법 
    - Number(값); -> 실수로 입력하면 실수, 정수로 입력하면 정수
    - parseInt(값); -> 무조건 정수
    - parseFloat(값); -> 무조건 실수
  - 사용 방법2 : 숫자에서 문자로 바꾸는 방법
    - String(값), 바꿀값.toString();


8. 조건문
  - 단순 if문 -> 간단하게 참을 구분할 때 사용
    - if(조건식) {
	실행문
	}
  - if-else문 -> 간단하게 참과 거짓을 구분할 때 사용
    - if(조건식) {
	실행문
	}else {
	실행문
	}
  - 다중 if문 -> 조건마다 다른 결과값을 내고싶을 때 사용
    - if(조건식) {
	실행문
	}else if(조건식) {
		실행문
	}else if(조건식) {
		실행문
	}else {
		실행문(예외처리 / 생략 가능)
	}

  - switch case문 -> switch의 식 == case문의 값
    - switch(식) {
	case 값 :
		실행문
		break; << 탈출버튼(없으면 계속돌아감)
	defalut : << == else와 같은 의미를 가짐(예외처리 / 생략 가능)
		실행문
		break; << 이거 생략하면 큰일남
}


9. 반복문
  - for문, while문, dowhile문
    - for문 -> 반복 횟수를 지정할 때 사용
	for(let i = n ; i > n; i++) {
	실행문
}

// -> 1부터 10까지 1씩 i를 반복하면서 출력
for(let i = 1; i <= 10; i++) {
	console.log(i);
}

    - while문 -> 반복 횟수를 지정하지 않을 때 사용(무한 반복)
      - while(조건식) {
	실행문
}

while(true) {
	// 무조건 true이면 while문 안에 종료될 조건을 작성 필수
	if(종료된 조건) {
		break;
}
}

